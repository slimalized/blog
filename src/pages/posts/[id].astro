---
import { getCollection, render } from "astro:content";
import { TableOfContents } from "../../components/navigation/TableOfContents";
import Blockquote from "../../components/posts/Blockquote.astro";
import CodeBlock from "../../components/posts/CodeBlock.astro";
import Details from "../../components/posts/Details.astro";
import Heading from "../../components/posts/Heading.astro";
import Img from "../../components/posts/Img.astro";
import Link from "../../components/posts/Link.astro";
import { formatDate } from "../../utils/formatDate";
import Layout from "../_pages.astro";

export async function getStaticPaths() {
    const posts = await getCollection("posts");
    return posts.map((post) => ({
        params: { id: post.id },
        props: { post },
    }));
}

const { post } = Astro.props;
const { Content, headings } = await render(post);
const date = formatDate(post.data.publishedDate);

const components = {
    h2: Heading,
    h3: Heading,
    h4: Heading,
    pre: CodeBlock,
    a: Link,
    blockquote: Blockquote,
    details: Details,
    img: Img,
};
---

<Layout title={post.data.title} type="article">
    <nav id="side-menu">
        <TableOfContents headings={headings} client:visible />
    </nav>
    <article>
        <h1>{post.data.title}</h1>
        <p>{date}</p>
        <Content components={components} />
    </article>
</Layout>

<style>
    :global(main:has(nav#side-menu, article)) {
        display: grid;
        width: max-content;
        min-height: 100vh;
        margin-inline: auto;
    }

    nav#side-menu {
        --width-toc: 280px;

        position: sticky;
        top: calc((100vh - var(--toc-max-height)) / 2);
        display: block;
        grid-area: toc;
        width: var(--width-toc);
        height: max-content;
        margin-inline: auto;
        transition: opacity 100ms;
    }

    @media (width > 1536px) {
        :global(main:has(nav#side-menu, article)) {
            grid-template-areas: "toc article 0";
            grid-template-columns: 1fr var(--width-article) 1fr;
            column-gap: 2rem;
        }
    }

    @media (1152px < width <= 1536px) {
        :global(main:has(nav#side-menu, article)) {
            grid-template-areas: "toc article .";
            grid-template-columns: 1fr var(--width-article) 0;
            column-gap: 2rem;
        }
    }

    @media (width <= 1152px) {
        :global(main:has(nav#side-menu, article)) {
            grid-template-areas: ". article .";
            grid-template-columns: 0 var(--width-article) 0;
            column-gap: 0;
        }

        nav#side-menu {
            display: none;
        }
    }

    article {
        grid-area: article;
        width: var(--width-article);
    }

    div.toc-wrapper {
        width: 100%;
    }

    div.toc-wrapper::before,
    div.toc-wrapper::after {
        position: absolute;
        left: 0;
        z-index: var(--z-popover-ui);
        display: block;
        width: 100%;
        height: calc(var(--font-size-s) * var(--line-height-jp-m));
        pointer-events: none;
        user-select: none;
        content: "";
    }

    div.toc-wrapper::before {
        top: 0;
        background-image: var(--top-gradient);
    }

    div.toc-wrapper::after {
        bottom: 0;
        background-image: var(--bottom-gradient);
    }
</style>
