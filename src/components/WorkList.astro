---
import type { CollectionEntry } from "astro:content";
import { formatDate } from "../utils/formatDate";
import Thumbnail from "./content/Thumbnail.astro";

interface Props {
    works: CollectionEntry<"works">[];
}

const { works } = Astro.props;
---

<ul>
    {
        works.map((work) => {
            const { title, publishedDate, thumbnail, category } = work.data;
            const year = formatDate(publishedDate).slice(0, 4);

            return (
                <li>
                    <a href={`/works/${work.id}`}>
                        {thumbnail ? (
                            <Thumbnail
                                src={thumbnail}
                                alt={title}
                                category={category}
                            />
                        ) : (
                            <Thumbnail category={category} /> // thumbnail with default image (slimalized icon).
                        )}
                        <p>
                            <time datetime={year}>{year}</time>
                        </p>
                        <h2>{title}</h2>
                    </a>
                </li>
            );
        })
    }
</ul>

<style>
    ul {
        display: grid;
        gap: var(--space-xxl) var(--space-m);
        padding: 0;
        margin-block-start: var(--space-xl);
        list-style: none;
    }

    @media (width > 1152px) {
        ul {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    @media (640px < width <= 1152px) {
        ul {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width <= 640px) {
        ul {
            grid-template-columns: 1fr;
        }
    }

    a:is(li > *) {
        display: flex;
        flex-direction: column;
        color: inherit;
        text-decoration: none;
    }

    h2 {
        display: -webkit-box;
        margin-block-start: var(--space-xs);
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-line-clamp: 2;
        font-family: var(--font-sans-variant);
        font-size: var(--font-size-xl);
        font-weight: var(--font-weight-medium);
        line-height: var(--line-height-jp-s);
        -webkit-box-orient: vertical;
    }

    p {
        margin-block-start: var(--space-s);
    }

    time {
        font-size: var(--font-size-m);
        color: var(--color-primary-text-l);
    }
</style>
