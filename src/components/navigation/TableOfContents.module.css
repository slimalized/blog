@keyframes detect-scroll {
	from,
	to {
		--can-scroll: ; /* space = true */
	}
}

nav#table-of-contents {
	height: max-content;
	max-height: var(--toc-max-height);
	padding-block: calc(var(--font-size-s) * var(--line-height-jp-m));
	padding-inline-start: 1rem;
	margin-block: auto;
	overflow-y: scroll;
	scrollbar-color: transparent transparent;
	scrollbar-width: thin;
	animation: detect-scroll;
	animation-timeline: scroll(self);
}

div#table-of-contents-wrapper {
	width: 100%;
}

div#table-of-contents-wrapper::before,
div#table-of-contents-wrapper::after {
	position: absolute;
	left: 0;
	z-index: var(--z-popover-ui);
	display: block;
	width: 100%;
	height: calc(var(--font-size-s) * var(--line-height-jp-m));
	pointer-events: none;
	user-select: none;
	content: "";
}

	div#table-of-contents-wrapper::before {
	top: 0;
	background-image: var(--top-gradient);
}

div#table-of-contents-wrapper::after {
	bottom: 0;
	background-image: var(--bottom-gradient);
}


p:is(nav#table-of-contents > *) {
	margin-block-start: 0;
	font-size: var(--font-size-s);
}

/* See: https://www.bram.us/2023/09/16/solved-by-css-scroll-driven-animations-detect-if-an-element-can-scroll-or-not/ */
@media (hover: hover) {
	nav#table-of-contents:hover {
		--can-scroll: initial; /* initial = false */
		--thumb-color-if-can-scroll: var(--can-scroll)
			var(--color-primary-outline-l);
		--thumb-color-if-cant-scroll: transparent;

		scrollbar-color: var(
				--thumb-color-if-can-scroll,
				var(--thumb-color-if-cant-scroll)
			)
			transparent;
	}
}

ol:is(nav#table-of-contents *) {
	display: flex;
	flex-direction: column;
	padding-inline-start: 0;
	margin-block-start: 0;
	list-style: none;
}

/* Saved for future use */
ol:is(nav#table-of-contents > *)::before {
	position: absolute;
	top: 0;
	left: 0;
	width: 0;
	height: 100%;
	content: "";
	border-inline-start: solid 2px var(--color-primary-outline-la);
}

a:is(ol:is(.ol-depth-3, .ol-depth-2) > li > *) {
	--a-padding-block: var(--space-xs);

	display: block;
	padding-block: var(--a-padding-block);
	padding-inline-end: 1ic;
	font-size: var(--font-size-s);
	line-height: var(--line-height-jp-m);
	color: var(--color-primary-text-l);
	text-align: left;
	word-break: auto-phrase;
	text-wrap: pretty;
	text-decoration: none;
	scroll-margin-block: calc(var(--font-size-s) * var(--line-height-jp-m));
	border-inline-start: solid 2px transparent;
	transition: border-color 100ms, scale 100ms, rotate 250ms, background-color
		100ms, color 100ms;
	transition-timing-function: ease-in;

	&[data-is-active="true"] {
		color: var(--color-primary-text-h);
		border-color: var(--color-primary-text-h);
	}
}

@media (hover: hover) {
	a:is(ol:is(.ol-depth-3, .ol-depth-2) > li > *):hover {
		color: var(--color-primary-text-h);
		background-color: var(--color-primary-container-la);
	}
}

a:is(ol.ol-depth-2 > li > *) {
	padding-inline-start: 1.25ic;

	&::before {
		--size: 8px;

		position: absolute;
		top: calc(
			(
				var(--font-size-s) *
				var(--line-height-jp-m) +
				var(--a-padding-block) *
				2 -
				var(--size)
			) /
			2
		);
		left: calc(0px - (var(--size) * 0.5 + 1px));
		width: var(--size);
		height: var(--size);
		margin: auto;
		content: "";
		background-color: var(--color-background);
		border: solid 2px var(--color-primary-outline-h);
		border-radius: var(--border-radius-pill);
		transition: inherit;
	}

	&[data-is-active="true"]::before {
		border-color: var(--color-primary-text-h);
		border-radius: 2px;
		rotate: 135deg;
		scale: 1.4;
	}
}

a:is(ol.ol-depth-3 > li > *) {
	padding-inline-start: 1.75ic;
}

a:is(nav#table-of-contents > ol > li:first-of-type > *) {
	scroll-margin-block-start: 100vh;
}

a:is(nav#table-of-contents > ol > li:last-of-type > *) {
	scroll-margin-block-end: 100vh;
}
